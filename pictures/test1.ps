%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: test1.dvi
%%CreationDate: Fri Sep 13 14:11:56 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 324 216
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips test1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.09.13:1411
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 69 /E put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9435B8575DDAB8AF9358720367
9A974E13D88C63121A3196210E0C1363B06E0C4CB49A374F2A0C163CE0512B66
7AC78A09A780813B1FF02AA967B12AAFAA0C4E797EF349A0EB76D9524D9345E8
226E83D3291C80B65879B61B4A077FADD338BC77A464602E0BD074661C9CB015
C94B3BEFCB03A509EE26B3410BA3333480CD0512D9106927A9E59B7B92FF069D
319CD1A09268391901E5A854A459FEA1D104DB756E50BB0029744C713DCCEAD9
FD1D5519E7CF062BEA33EF6C9068B9E9F5579108623195BB83FC313D97F62AD7
88D7A56D82E33A34FA201FD771A2F4F50BD1BB37ED50880D77F0FE3AEDD3011A
7D9860D59AC7A988C4516ED8B4B5ED7297EE576202FD04008079F09BB2FB82B1
D1E2E076074BFF0EAD54D62A75A2E230F9A250F75CC7893E77F406499A2B12B9
53D0AE1984D78EF2399E862A225988491201A7A7E5884507930BD0C12B55EC21
B9DC4B1C37D159D01BFF4511CDC412A885258111779F308C3AC1357834C33171
533EAC38A2303969F4228CBAC20A628121B6317FB8E40E11E48E61DC6DB3FD91
1544F3FD327A316832E83149C3860AB557A620C0DC3B70D5D07A9411B6E88C18
CFD9B234CF2F2D603D02666BDEB5AE7DFBB73FD1A0039F86E8489003F84951DA
D3E9ACB79888AF725FDD44F3B23F8FBACF1E5FFBEC24A6DED407DCA42C29BAC2
0A476A80199EEDB5321E15099FC29029DE39F393E7D50D28C63304BA3758C081
E37057DE0BC5B2799B4A6B62A9C9BBCF1FC0273DE696271D1C73675BC4DEBA55
8D53A63F9F1D30B9B89C5FE1609C8111412825F41ECFCE0BCA12B0D2FDBE61E0
B0C8501016BB9F449C054E91CCAE698A3A589177EA1344C6E44869135113CD90
0AC1F0F5F458F50284B65EE0DCF0830C02BEA2CAE21DFAAFB537D8D9F4F920CE
FB4D54DDF7FBD46D78AA49693A4A618FD7BAC38C83ECB807A6330AAC8899CD0D
DD4A9B47EB287731B70785C23DA7A725B591733EF7187CE799260D00F9F40FE6
35F5806879CE50537F9643D44B6981772E8546A6D79EFC00389360E7EB28D140
C83AE1F1962DCC9A9C56FAB9C164E3836354569899DA5D51321A1AB830CAE550
BC5816DDB82C3CBC21DC25507B9EF730253B5FE2AEDBF03C2C1A78D554F1489F
09B1AE16248073129A83252F671CB426EBF5F79E3A46F04B319E7391214782C9
0918D59E73442BF5DB0BC0C43B5D4D3BBC2DECC709B039F529F615F002215A0D
58E3993401FE748834258DA21F0E3708FD91D7ADE548F86A1C7C925BE9186686
583FA83CCEE3FAE1B936E68FDF63D813E60E53D8F3E9D58ADB6AB154DAE792E9
A242918FA7AE5136969F14177CDDDE1A9C4D51FE2AF90C29F1132F49BE6A3BE4
8CC4826515D027548036EEC28005291E4D768B273BD840CA7F0D13D4B132D318
555F326617DAAFCBCC3A07034BCCC4E60903D75CD251701B242F82E2205AFBF3
D4BC3AAB24E9CF94103AC36D2E1E53C13785F134CDC2B76DF6A3FABD3AAC63F6
4DBB5F37704DBF1D4EEAF64842D0397E43F0DD8993E107479044CFAD402ABF22
03C0F0337C11856B763454BD5FE2DEB29E53F091F1A0FEB8B5E9AB7C37A32284
51CE63E45D74F8B759017D1876219DFC6D2A49D4B3B533E62AACAC1B034433E5
A0987922E0CFAC1D880234216AA81E48BBFF44D7073A6F38B9DB6F83FE5571B4
8DDB20810A5033A89B35F5764B828EACE52EE14B5FE74C35B166C0F26590A789
4CA6F99A83678714734F22B4D335463EE94197365740986E9A2360ACA53326E3
28A8F446C41510A842D5DFFA8223B0312136CEB7BE8A5C27AE952F4946D01DD1
D65C1D50D6EDB0EEFE30F3B3F5C994D321CADEBAB99673AFCA215EBAB0F29827
20EEF5F307F9D7860592710209EA1B3FD7F8D11482A0DFA91FDB4577FD969411
7C332EA39AAB7FDB79C142549516E6C4E63F504D46A17E6C2C01AD1AB2CAC12C
CAFBC4B97DD83863A4A4E430B0B7763C02896AC7A39655DA236DD2C5D0A23358
A5F1BA34E18D1B06A831D08C1AADCA8036B7F24606651E5887FE8EB80B94B35C
725E3CFB3810CFC8F0C39E6660E80B16427B7492D5273D673391E6E84C02FFAF
60DFEAF0B341509DA1CC532B9FC671BB7F2FABA6945C1E6AD26CD426747A9D0E
E3E24BDC21F1206CBD8F6FC3F3C7C84F3D397E25A739C61C084465A5E6E28BE6
75002BECA5A8A171A4A419CC0A8E0068725315DAF859EC3EA42F21FB94C2D83D
B854491503F1D05B21BA744FC52ED1004E3064016E8554B9BF026D0EE22B7730
0EFA79F5030C4251CF7E1A407A96688C23C866F17B96C474DF3C2D2533C91120
11EB6EAD9EF3542E06FBE14BF8BCF0EAE6ACFE148B10750CC3670D8B0B89C65A
9124075DF9965BC832A884314464E0B3347CD2DDF5645E18CAAC27052C52AEA4
D824C9B2641CD6774148476D645F86023F630DEF9AAB9B712DE11CF21FCB11F9
0B16F574AC8B12D71AD0823E02D0FD35F425F0F8F012198BBB1C8061D1024BBC
67888D6C00500554145125FB0669C8776DB8001F8685FC95EC7EDD60506506ED
E0A7CF4EE8FB43AD7CEBAA1E8AC903FB1EF52F939E917D7D15A01761AF688C99
6E2561756B8F923AE34B82B1D4337FB47F7BE3A27040559423156FE77845B967
41B1897F4680F672B2528D5F9A9844E6B105BB83F166EF08379ADBDF93AE54FC
DEF4C2F4787988CCE5E948D6417A0671FDD1CB316A512854CC70677865BCB3D3
CF0410C5EF052E53560BB91A050AD00D19CFEBF7C899CB6DC0F30CF38F782C9B
ABA1A2F363888E2C465AD7B95E7641782E3298C0C090BBD139D828045042809B
A99DD7B637802D663A8FEEDDBA2549852043B5A93B8C7DA6D16F64C3CF84DA8C
5CEBD06ED8E44BC7B08E4BE820E843608DEF3A056C0402E7895F3C8D5E18DB68
271F9A0B3BBA37E622AD7E8E633408FF890A4296F3E9B0D405E9DEBF3A7F676D
DD545773C09068553725AB5607C425B28D881539B7A306633AED4FE11424DE1B
980F4310C279D28F17A2EFA33429181403099139EAC75908EB9FF7050040F75A
696E956764F48E53D1483BE2779584F269C4301CDAE17F9C530BF5050A5F5D32
1B02C002AB9668232B75C38ECDD2D12DC0BC5D17061D9EE7F7EA8F9556165CB2
2A57E051AC6C46A02FE545666A8D287A7B834144A9DED96416660182CEFC608C
4737C6AB5D6DA857293505B4E8AC63B777F1F839BA2A9F2074EC6B9BD4E01319
0CDB5FB51E2CA4DB83F4213671A73D5749313E1D93E85CF35D5530A6C4BBAEA9
700E651E85A4EF3938C3293598A870C13DBCE5200DEA020368834051A61877D4
D754196018E3A08BE5CEFA1692FD1278C79FAC0CF4EF49B179F610672B7CB7D3
C63354CE7EEEF8ABC6DE5583D6A84F5A90A63EB53EF9417EF92586CDAFB1630C
E199DD0655E0D4EBCD3F5513BC855C310768E35CF8E250F3F8196DCA5B2FDB27
C2501331B207870F02D282D9102721F5C0B52382FB8F401C300ACC06AE4E871F
79E8797EF31BE16C55A78D6F2FD3B647BD4F1557D61C52F3C7FF54CCAB1C35E8
9B3A90F1F6A1820834782B1DEF5BF10C99C0FFAA8E3A76C50A02B3CE0DE58537
DBCA43264F5C62F61789035DF89451C1D7854B2A75A5445877A893A451B30A1B
BBB071DDC8926A4988284B06924D56D49BC19B28CEDB47B8E7164515F2B83DD5
101DF5C303357948856664E161D3E736F84F36580AF490DD9BFC1DB17ACF988A
AE569C7B821FA2E4B75388D9E6224FFDA0652F3C484D48C1E8D5B6522FFB70EF
FEBE27C5F8BB59C6A87B7C19393D331F8D7A76302FB016845773A0128857F738
C262875C1404C608757C2294E722CF2BF6C7977992304193A8874BE642BA016E
BD2D06677D635BCD94F4E4A3F27DA1AA9C9A46A036505DB8CB8E0DFD8735EA06
3E157FE1B7F33FC94CAC414718436F93E7370D4C1483E4703FDCA2F9134EE546
A6E8F1F7803D1AC26CE03B1947B68D53C73A51CD16F830B8E6693AB2E04E9223
796D3B9705334BE0759889D34C5C2B9BF22A8D9FA6AF78FF88D933DD2D55BE3C
5B16055919E306ED7F0A20092F2AF2F0DADE3E9A5BE47BA00AB170F825406177
32916B7F9CE4C6D16361CEF76FB50103B0BC8DF8FD94FB84270DB9C74FFEE97D
4031DB100EB550C3E2212B2BF2015C707AA329F71246D4582CE8618F1220BE6C
D0A4C2822EC1254D9BFDDDE627AF5922CBA8D95C12C1FD70AC0EAC67F3A3CF37
3557129BA7F01B993A011FB73550FF67DAAEBF9E24870D31824608B7FDC3CCD6
5FA579E45CC3458E327CB3551A05CCC5589E5D0558E8C4192AE8B8837E9D65CB
8E0E171CD8DFB18B1BA30BD5025930ABDB8A257C995829358ECEF302FA5E916D
D87BAEF8D781253D904D8762FC33A07393EC17256E28CEA6ECC1E5638F58172C
9D9D910173F03BFAD6252521967F88F2E3A35F932755F74B8A3B398E0853D5F4
F2415E7B8BC28A4F6A8222C7867C8F0E3FFA8AD1F9811F632A12086BA46B7731
DE096CD9539C9F62432448F3BFB7E335BB0DF4B7AAD98528D8731ABCF5D2C83F
620BD24669A7F4FDED90D9501183E6B821E3A54FA5ECF245732C09B167633076
29EB1DA8E44A4FD5EDCA78C76D8DEE46C743BE7432A2EC377BE80F53F3C6C804
7A9C071100D3F429D17112563F731CA2878E4DA3263D9BED63AA974D007C60AC
D5D5BBFBA28E5602238B30AFCDCC984FAC0CCA453AB82286BC42DA3346BAEB51
200930F4426686492F8A64183124364002BA44618ECB73784A44A41BC68BCD76
F52A268CFD4F700ED5CEDA28850CCEE08BCFC7F65BC3868B7D31FF774FF95B51
199CF87DDB2A9329EE62BC09E6EA9206C59F8D01B49E1E798A948143C39D078B
93B84603F286B256EDD2055372746CDE06CB2378724DF427D72E890DCB3E2143
F9AAB84278A207B485966438BCC67495C4D67F5126166A89B7E33EC43E4C2E37
9C59760A83FEB8F2D44C8B82078C44BF050FBC692DA89963437E001F2763118C
1F2504838F42F177DCC555069735FE1BCBAA38E5980A9CC396424D7C1FBE3148
FD2D19BC668C5E263F43982BA74C98FDF03FBA42CD71297EEB521AC658539C2F
20D6DF023E89CE6595CE114078107A2667412C8EF64D90C7394FE8C186E08867
15E9935A026885BF724B92405E66F9BBC3101A90C2356791955C9067A6BB6942
FCD2C9AE09B78B1565C72401B14051FC6A76C6DAD4D25AEA98D44F5BCEC1560F
A408B693CD28F05159D54E0337A7793955DA4916E9CCA0E8DBFE637C3C4E1AD1
E342820A9B2FDBD1CB27177A673F07A55575776151CC41863035C907737325DF
D638E678F8736083D74B640A3D648586C31C31F6CCB9E8A9FABD3B741927390C
3436DBEEEAEB78B2DDD10A4D971173D41E01786C7E963056D59E5AF6A66FE81F
CCB3155F3439C58BBC94BE4627766B148EA4C5AA307171DC02C62B2A8EB332CF
C7CB6155D8B61785C494586235E70BF38FFF4AB1EA0051CC41F556F3DE39D302
521B2FACF456CE95796A26FD7A474FC09B4B01D2BFC58E6FFCFC0A394FCDF57E
77CA513EE25EA4AEDE7F0DB0ECB86FA7BB245E0393FB6C95A20D6128051C3988
6835620879A3BA987FB13E1D47BCBD1CD44F25F7FEECC7B6C99D6A7193D8DBBE
2A8A9E6A157222E95A9408364494B74C042BD5A3B3B03BF01CCBA2697EE561F3
836FE44217DC7E7AF1C34D40A8B82B91C8797E69AB71CD4FFF373507BA3CEFBE
16395AC1E240997B267FDEC8165B5449CC36B94292C1FDAAF1BE95A98E3D7D28
46ABB6BDCA12EBFFD49C7794CE6392E58815BE6C03EC53926930E977D89D3659
9DE5A7CAEA2D76F0957E82B7F9B80AFE62745FEAD27096A760F8CD141C57D089
3E2F570241EFD6DB1820630CC93665D16BF5C59C601B9BF4A06A20A18A23C5AC
DEA87D51BEB34088E892A45BE1EE85502140FEAC48D8D0330F6390EDF24C9CEB
6A25073A7A006FD2E110FCB1B44D66EDEAA3FCEB9AED9FC183E9538EBE34FD61
E80CEC2EB011ACABB87C6A20FE1C872F5247CD38F0C8DFC61D27ED6E60F09CDE
B645AE00A0095F7455F934EEC18B93C36C0854D4412B46B474FE49BF583EAACE
C320308A7CABD67A6CE73BC8E60272B76880573CDC6BA153E26D5B31B0B2C136
104A47BC1AF533D9D01C38DF4AC2676C66D02BB580CF71AAC88978A4673D8A62
02B209944928556692D1693534293D255949D08F46C4E13728BEFEE3A831A951
0002C37DFCDEE21272F6F618A18BC71E9247F84FF0B14020B386E9DA1E05406F
8E32133F0A0B18FC5CF86C43AF3FAA16F3750E6FFE5A5BC928051B02B17E8678
CC542DE2F2CEE40B1C2387F9083E2292886F91D933556464F56315D6D25AF0FD
E5E5FD1D87843C41644D9F0FFD4F20DD1A1935DF6DDE4F996D9A6E21A1431D7E
92C8F9E7DD9B4E58A3A81AB9074D7EA2F7BC5CDEB9A86506FE7B6CBD3B986E9B
B43FC275EB05AF6857D6B7898582428CB9A21F8FA0D89232567FEF3D544A29BA
425504C7AA1C3F6C6B393124FE0A0047DDDA93F7064BF5C3FF4BD3879C291E84
9AB207723B6AD7F7B7B3114A6288DB0BD2E59A460DD99E0B25F4E2EBECC5AC10
A62CF7B31D3067173B2A47D8A515259F9B7A199D0906DC849416C1DED9F9F10E
F7D1C3181841FBB5BD5361B2E630CFFFEE1E8B31F5AD945DE360BCCF4B5281FE
98E21001BE2DBA7398457422F2844D8D5A36DD21C7DBEAF71A525203AF838A89
D5EF83764AEDADC0F8DF73FEBF8F0083AE999EB28433A1F1854CDCF7F0E98C4E
503F0C2AD5819856EC735BDAEC70FC938BB5022462566B06E27DB80225389790
D224977B4FC462E482643DCE6A8E13701C33D82602B751F0EC0DB8C2E1DD479C
B33C1B6EDC0BACFFB18ED6EF6EFF0265746D750DA4F916D7814156CFA6116DF3
51F250E87E2AEA25D622095C33FA7D3C2FC058EC1ACAECE14FE7A8EB81224B2B
EC98B5081FD84A4A3F53A9F308920CCC8CD8CD9323CB4C3231550B2C75371183
F9BEC7D90300444A909720B07D245BA8B19E1788CAD75597FAF6A98851D7F6ED
CD776404F63D8AC17B80D68129A411F01C0A26ECC576FA95412E8DAE35694987
36666B9EC2042BDACEC625322066CE3DFD7B6B794647F957E769D89A4DA1F85F
9ED7DF9C6D96D45E4D606ABFFB7DE20FBBC297B1935A9DCCC42F545BEC272E06
D7DFF864B723F3BA5CE8AB9C27DE9BF072158497A1D13E6B72119D208CEE16BB
8847299F181E55925422FFF39FE313520D0A642E671EBABD7143AEBF6FEE9B88
1F308A73D2842A857EB58A0041E54DAD128F47EFD3CCF162CE582B451CC476E2
4A4FB28E8D0BD177D38F551A9914A11A7F75A41A282BD4837FEF34B50C394604
73044F502BE08EDCAAB2ECF0944C7734B0AB18C14C68DA4044D65C90BB23408E
1D93E5290C53049AF9E942C81C89D35523C8847F8C219F3BAF627790935C096F
22BA9DAFABB29AE8A04DCCABE92DEFFCD2695934B13942CBAFADCE9BBBD18186
E673EEDB9519E24437FBE852E0D4B49F898D7F90F900AF3D67F960E26399F1C0
0477074610714A24E0DE41E864B661C3387A555ED34F6174DFE308BCA904128D
DB1C41299E864ED4B4830B599BC010739D671EEB05BE0C8225A24AAC837C79A6
A60C9A87148FE63B6699B2F8937C5F8E50D5CE6035D65BA9B0A912E3691C6C8A
5424A249F244540D460B18B3F7EB2751908116CD345D8F7E322291B8D3A2B7BC
D10E9ABEC6F1FF955C9FF80DEB181DF9E476263948B89FB0B8C503F43581AF2B
AF66F172C69874C2FE30D5C3485AFE9B512CAF0BE40B3FF807E5E2B77803EA8A
94E5D523E39D09D1FF1BC63DC2A8FFD841FD78A11B56093617DEA9E19AFA4F60
CB17A6B7F563E97832B3CD49B06D7E62545D58149F30607186D61F932A300E9B
98CBD46AC2905903B2AB13FB98C79B2A39FCFDC3AAA006257E2D1B529049B727
A9E209C06CC3A01C520258AFEF7BC5F96D110A8F16F7A6E1E359893734267665
4C4F30C79365FCD834832E46E3DF458B75445A0099EA064A5E62BCDD7C832726
DDB411A1B152792D499319770CB453EF40FDC6FDBACEED38FA4B4156EC09B417
97D966296E36A39FC5B248DDC1C8EB5025CA787EA76AAE348BE9467AD5876E75
BB05BC2F0A0C4E0C3289B534D0ED2CB946A29F87716DDAC470E6C94D7C20244B
60F74B51EDD2F3EAA29B6D161E6BCF4DD2D521C85357222E5B02DFC76CDDE198
D46A57D2DC714D4B9A27D8FA56AB34276855CE01793114446EDA452351DFA09F
742B63AF81D2197CF91BAB00B9C3865C7ED9E1A0A9283B645F3934A5C45BD0AE
621D72734E1E7EE823886A167618E6BAD2E8ECC73D6CA978563F283AB160E71E
75AC3E6A1FD0FE6309F9206A03209003EDE401F2EC44619AB386171A0ADCC9EE
49F208D1DBE57DD01E915E16289E2B5F2FF8558AE22797F9545063D395B20612
4A85301D0E51A5B7AFC473D0C149D2384D9223EEFED42E553EC3A5153D8910CF
AFB9DCFD4AF60B16C1EF2F1EBC8A92F2EF857B14CE0FBB6C742CB63D68C0674B
8246E3A9019C548C0887865CFCE1C9433CADE59CD64F19D8AECC5E10F41F967F
E6A27542DA9CF6C1403E2FC21A0E916A6D9CF9782F37FC0482B998722AD66E3D
F6482E6AF52FD00D71A03DAEC0FD053EB52F63D6E9A6A208917FF9D04125DB72
D907DFF5716DA061DBA0242D44928BB82D3A6C8A7A50C0D946649A36C6872536
6720169B7CF22E6D1CF1FCF4555C5F6104448D45D08A5DF69F323101BE2E70A0
9A4BBDCE1AB661744196EDD815C08C1AC2D54ACE9B30002888E7B805130FE2C4
AFFAB27DFDAC3FA67518404F4F0386426BCDC59C4ED330478D65B00AF40FC589
680114ED366C5F858216FB4E72A42FFBD5DC43AF87B704744DBE1B91A34C532A
7F3D088A958AF4EAD6A29C611FC3139F6CDB76172C04CB939785709B1308C125
64CFAF1C51D0E58D1EE3127FC0F52440A8EEAC56B4A806FB8CFDC7E884A0F36E
B68F0821555A20D3E107E7EC9BA0B188C06028619BFE816BA82A98A32D1CCA90
362B4B830BA7B657232EBF65DC0B7AD4384359D9D783DD2D42ADDFF315E5660D
7C7A762E3FB153520332C3AE2AA9FA7B2BEFA89D8E21E4E1A34975276A7C5E9B
160FF1AE8CB34AFA40CBDFB2CF37D9D8963E7537C3193C196E595E71A41DC095
F4CEFCC6FCB4B31500755E4987D84A65C7BF8448F533DA437B8B5E4080BAB091
A55260C6A2D8E1295F26AF25E2FF3DB9F9D3DDAB102F4FCA93831292A8043733
D6AF6D280DC960603870583723D3751648D9826E00F02E79DE8BC112D6C1EFB8
62D02920623C24CA9242442A3447D8B0CEBBE4E9FF737BD6B811BE9CBBA8DDBE
3E0440FC33650F5652ACA25210B36EC86CBD72FB4A1C8A1841E398308EABD852
49073745C64B799F3043BA02AE65E1E91F4B55414B3E7C0E8342EC8A5EE2616D
B8BE8D5900D390606F486832F3534259B0A6F4D6CFAC158B9E9E96C2105F4F19
94231907D8B3861446F1C05D89832E0E16F7BF2332E5CF4FC9FFC472F9018F59
2532C0B1B3163E641AD2296742503DAEC9CF104A62DD781E856ACA9416225A75
3B6C08BEABFB905711D7430B7FF7CA8E3135904C4E7409813A202903A0BFDAC5
CA42623CF726C637456A120960D3AA18C803AD156695E12A430FE49F021817C7
C742609F2682B85FB34261D7A40DF3D4B13AAD593CEF3F59E9BD69679E987100
69434E249B5E7D70F61A9508EACC9406073490B855A964BE6E24C474B3F6622A
1E40DA9C33C45D373FCB8B5A0665FF2D1F719244AD9732847F8ADE3313CB46E9
BD10F4119BED5768C9E77567D805D34D86F1D5F5AC7D0241BF74B2780C2BA911
CB77049D9F60948F1C807E7C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 21313290 14208860 1000 600 600 (test1.dvi)
@start /Fa 135[48 2[51 35 36 36 1[51 45 51 76 25 2[25
2[28 40 1[40 51 45 12[66 51 4[68 8[62 12[45 45 45 1[45
1[45 45 45 6[35 35 40[{}29 90.9091 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 0 TeXcolorgray -232
929 a Fa(400)-232 678 y(600)-232 427 y(800)-278 176 y(1000)-278
-75 y(1200)-278 -326 y(1400)-278 -577 y(1600)-94 1021
y(720)287 b(1200)377 b(1800)f(2400)-472 154 y
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 -472 154
a -858 176 a Fa(Execution)31 b(Time)g(\(s\))-472 154
y
 currentpoint grestore moveto
 -472 154 a 552 1158 a Fa(Num)m(b)s(er)e(of)h(pro)s(cesses)-600
1200 y @beginspecial 50 @llx 50 @lly 374 @urx 266 @ury
3240 @rwi @setspecial
%%BeginDocument: test1-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: test1.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Sep 13 14:11:39 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 374 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test1.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (C26973)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep 13 14:11:39 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 374 50 lineto 374 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
63 0 V
4744 0 R
-63 0 V
stroke
LTb
1342 1307 M
63 0 V
4744 0 R
-63 0 V
1342 1909 M
63 0 V
4744 0 R
-63 0 V
1342 2512 M
63 0 V
4744 0 R
-63 0 V
1342 3114 M
63 0 V
4744 0 R
-63 0 V
1342 3717 M
63 0 V
4744 0 R
-63 0 V
1342 4319 M
63 0 V
4744 0 R
-63 0 V
1342 704 M
0 63 V
0 3552 R
0 -63 V
2410 704 M
0 63 V
0 3552 R
0 -63 V
3746 704 M
0 63 V
0 3552 R
0 -63 V
5081 704 M
0 63 V
0 3552 R
0 -63 V
stroke
1342 4319 N
0 -3615 V
4807 0 V
0 3615 V
-4807 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
LT0
LC0 setrgbcolor
5294 4146 M
591 0 V
-4543 46 R
534 -871 V
534 -910 V
534 -240 V
534 -325 V
535 9 V
534 -265 V
534 6 V
534 -82 V
534 -105 V
1342 4192 BoxF
1876 3321 BoxF
2410 2411 BoxF
2944 2171 BoxF
3478 1846 BoxF
4013 1855 BoxF
4547 1590 BoxF
5081 1596 BoxF
5615 1514 BoxF
6149 1409 BoxF
5589 4146 BoxF
1.000 UP
3.000 UL
LT7
LC7 setrgbcolor
LC2 setrgbcolor
LCb setrgbcolor
LT7
LC7 setrgbcolor
LC2 setrgbcolor
5294 3926 M
591 0 V
1342 2833 M
534 -616 V
534 -519 V
534 -265 V
534 -184 V
535 -114 V
534 -79 V
534 -39 V
534 -33 V
534 -54 V
1342 2833 Crs
1876 2217 Crs
2410 1698 Crs
2944 1433 Crs
3478 1249 Crs
4013 1135 Crs
4547 1056 Crs
5081 1017 Crs
5615 984 Crs
6149 930 Crs
5589 3926 Crs
1.000 UL
LTb
LCb setrgbcolor
1342 4319 N
0 -3615 V
4807 0 V
0 3615 V
-4807 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 728 -505 a(T)-8 b(otal)31
b(execution)h(time)p 0 TeXcolorgray 917 -413 a(Sim)m(ulation)f(time)p
0 TeXcolorgray 0 TeXcolorgray Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
