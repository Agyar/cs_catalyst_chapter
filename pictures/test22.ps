%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: test22.dvi
%%CreationDate: Fri Sep 13 15:09:06 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 324 216
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips test22.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.09.13:1509
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 67 /C put
dup 69 /E put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE29501464273B91877B0B41FF16551
12063F7BD3D2F8319D5B532BF9F91C7EBE72EAA2A9EA3245230A081109CF9472
AB0BFC57B1A5CA1A11BBEC1CF322BC25D0A6A1A07B3886B049A71F2FE599F933
38D95F739E1F09D5C7B5DE03F25120819F5B4B7C9CCCFB94AD1BBE9F842F1DAD
B900FF2B81F5CF175F31A2AB8C7673B94ACC38F8732A470B3EF126E2118A27CB
1AF6D177C1A7CF08B0592D418D543CE650F9F02B896EA399EFC8727D2C63E40D
0B7C43865049C3FBEA65B709C19F89BB44DF0EF8361C600D84D0FED549B9BCAB
E51EBC2D7D6B937D5F50730F87461D8166D473BF570B3DB7EE8B59746F94E090
DEEA37CAABBEDF919F519EC7B7BEDF21B0A34288A49CA23BA885D1C34836249A
EF8ADE9EA193310E3E65B053A2EAB9C183BD44FCF0C4807963B14433BDD91BA7
0E84115929BB08D42023B94C5E0F09E2366557171F2F72AAE38C57A5F21AE59F
5A0A21F830DA2F6B458208BEFDD79BD8C4C6E6394AE72B8F7F6B6AEEC9D5B0D1
C9641E59CE041594E0396A0BE2D7405964EBDB1F1997466EB09B29B743721932
EED7500342C8A67BDDBD597BAA0DA4E10D0347ACAFBB95CB6B7C0D3E2B9FC5DA
3C38A90FD1F95E3D6311C4D50F044EA0F24698B7252C22BE480A4B9AFD4BBBDC
F94FC81FED71A7B7FAFE3F85BF282643C65B1D2F7FAE74B8D924E48EF0002FC9
EB4AD595E1930B1C72F1B5EF5AAE0A618E255701EF2B4341E9E671D8DA530E92
85778EDF77B600F6580DFB00086F33051755365CE32646351A7610E9D59C2BF0
83329CF7489512BB4C998595438ECDA6041A28FC5A8773FAF9ABED1306F7C5D3
4E2B7D5A9E4FF57408F7FDE2D74F96310471B9A1B8341E49C62DDAA7032FFBF8
A7CFA315D2A1B0FA5117C21FB2DE99DD2C1BA0A876137CE694477F749F826745
9FF82D9C2233CBBA0A29F718692977E2F106ED93EFEEDAECD65E24C9DBA79A84
DC57BC25C00B7B55C2E198482F1976F69FFDB8AF1C9E3D3CE95EB5D7EDBA8A10
A7639C03B6A576CBC040E6B64CF1B2410253B6CDC97E1CC04D2640E97679ACEA
830AB44196A832573A2C71F469930F29E920DA2F5DC209F2BB4381EEB24334EC
2B14ECC9B429788C38A82BE56D439417455C5DF339EBB7ACDD4CF75D5B36BFE1
923452D99EB7FC5015D30AF1869C3E4FBFA970946B1EF957C481725EF6F1EF22
E1DE92C5008E6F3CA22C166F6DAC8C066379654FC1259DF3D1339FF854B4613D
7C11C73E755785915CA903C4A120C13DC6CD11119603EE1329C17B76095BCD88
9176B8A0A75A8ECC90BB66AC1FF0A19C372A973098F618AA4B4C77CD70726187
340AF127033FF0F886199803AABEACDD341E27030C9343D40421169B0E0E1EFD
846DAFD3297DA381CC865E51784EF1FA858033F708C23598548C74EF25D7774A
8D71DE6D95D6F4EEEE809BCD936FF4B76DDB821EFFF0BF941BB3F310794A648F
0D3CD8F51792E322DAD8CD3CB4250F145CDBB9983A97A95C1D97CCD2A60251F9
D105E1075321D0D35F0961D9E28BF0C5989BA03AE866771E149C68B2966D7BB7
67D79AC267547B34AD49A9147FBDB8D9168F45704807513C22253B97539AB4ED
A1318A11A99510B0A8B741F4D38559A58C53F52DF9E572747147F13D9BB1E47A
421B3D10096185535F8D8C67E5D9BEB5D5EE7A3BA6E3B8BC7A6074C8D66218E2
4F25A99DED00FAB4B1655627A3F90DF3D52123C513B4202A30130264CA499F86
0F97BA62BABC688CD87034D6F7722077BB7BDBD86E89A4C657C8EEC26EE63010
94AC8FCA308A1CF611A21EC4979FE7060049CCE2767F7856FC6F2F83281B0E9F
6BDB550598557707267CB6E58F6D9CA6F5B88EF3EE1408C8514A567CDF9FF87D
FBC5B77ED158C0EF082D34E9B6AED23B019F9BF0E9B310932F833D9AA32759D1
B64A4A6580BFB3282509611E3C332FD10EF7D2C4F79CD65B77B6DA54B7C3CD50
F65EDD156F1735656F2E8A824084427A2E23D4B4B28F24BC26C4EC23CA3DD6C6
64F8CC76003CB9FF05B2A8F0A4123A317349C30A8829E09A792E33194C41DEEA
8521A4315C703763D6B3DA0528867F5D6B127B776B7984BD10B9C714FA887077
6EA163523F23FF8FD008BD44029170CA1A7A49D942F2413ACC9DE29701338BA3
01ACE3907DCC79E6B2CDB871F347B9CE61C958091ABD0034EF31A1661306CF03
A0FED62468891242AB399424634FB484508EFC7BEC1ABD547CBDB6BCC20BBBB2
89486F6C7E2385443897306CDAD972101182A41616016A7C6A48F5AADD25BA47
57CAF14B34FCA46A3D1A75BC12A57A60B4F97B291C9F75E1FB7C2B760709827C
E094EC09B960B44E24AADF0A9F61DA02125287F338C0580353649F774718D832
5FC31AB24BDFAE67FBB8834E0E8CBE3C4300B50EF6AC108A68FCD3A9ECF9B4D6
BB75756FFD8F5C7072700DB1355CD844D0F88C47399C63EAD0C3E38B90F0C874
F8AC6E424C158EDDB75FBE32F6E43C806A96EBFA86A669F6FA3472817C9691E9
818C733DCF74233B0A30A217FA184ACABC782E7DEB13E1269E6E9AC2DB57CF7A
4474A5B9BC71F947A299E8BEA6F0D11C026236C5C96E0A737FFC907836765A64
0D7CE72E528EC29E1D1F05D8C31B9C3178133782ACD3465C5CA2D45C6882BD3D
B669C8E4378C777769EAC9EF09FB04124570D9C12A24AFA2574BF892347DEE7E
B3B123C27589F0D4EB7BB7304D0C0C26435CF78E76442850C1AF5BFA41ABBEEB
C0A96F28C6EAD7FCB5BD3F620AD72346D384719BEADC9D845EE0216C0C9E3936
E14EE610F9970888A7F863AAF5E28673190E4DF7D075BD8D36F3DE102AF8DC98
75C222FBF9C925352449D33F89196645962942DEBDD82A0C4A86F03B68102D7B
A00F4EE5C398188B40ECE560A28F18196E9CAABC297A8C4C8985FB5F0731836D
BEEF53E3DAEBE8B59A09821BD121F361A0BB39E02217B34E09C28B65DD500A80
ED96EFFA1CF769F4A2A6DD033D6A0D639B95DD704764914593BB144BBB0F0AE0
879CE48637C5A136154CDCAD6C3F8A80A0110B67896264228D0CA623CF803DDA
E94921CA62B5D7203485ACFC43E812B25D3DA163BBA64CC5CCFE0CECB7641D34
59669942B17D3825972CAC8ABE85D65653F80D780A1DD8CE08BC9C7DFDA2C9F2
AB7C6CEB4FF6E539A8EDB6C9F7214E65BFE600A0C90453F042B7FF8F1837303A
F70F49C11919F6B8438EFCB9322CD5AC14DE9D4D3822A3E595C83EDF011931C1
6D259B61EB338D6311A548F10BB004FCC9777F403356497C2010C90317E5052F
9726ECA1DE958B44304FFE90DEBBE0C8E9E17AC38187D462C166979A9494C2FA
16F9E18A42CC8BB5A5004C9C27B350756C0004852EF82E1E517A76787664E6EF
0431867413AA69593CDD157DDB2F13EFB40C198218B046B4A873F4F4FB84A6F7
F9FF21C2437EE611D2CF560BA3626CE3DEE8A295EA2E4ED1BD33427ABBAAC501
4616043BF669A8F760CAB3767E1C0BBC95A53C5631F9FE24B2F31A0E00486FD9
5DF8E06F9B79C71E732BA094D05D084D3DBC8BA0C5D037717B65FA3CEBEC72A2
07BFE2F3B4E736712A1FB3464A31FFE0B6B7D57AA68870FA3DBDE88D6B63FC8D
5CA778E1F4E31445EA7E065D63F657DCFB5F971082552269BCEB607EE2AEDE75
5E1755880FA0E061766DAE1F182A2EC8F4E46D4C60D409CA59051645A49FDF13
94FF1A604D0379E92809B960F0C771DD2010DB5C11DF477E41DC035309D8D711
B0EA46EC39983FD643B07BE7ED1FCE4C99254D39333C47A036F96BA97860DBE8
C6893D5D5B406829EC4A02DFF8E793373C5466708408123CF44B66984D3982B7
52B1AF17D76E267F50769CDDE8B05D04F8CE8A9CE6E97E7AA725761ADE5B0558
4462E2410626D12DCE38392E6FF4B5222ECB856B184D82E3F965EA31E0689959
848E5A06D023010F06F0127F95F333D2A1CC8EE8F733AA19EA664C06312CCCDE
475D146F33645168CB283CE91912EA34EF115AAF4946C307F6B4A6787860D4E1
D769D9796027C9318604416FA7E2A289675E321D71C7B7369951269D7900CF9F
AF67147E52C58B0DBAFE1A87A9494B89B4ADA2C58C59D10FAF27838FF4C4F512
04F5CF857BF01F2A52BFD880BEDFB52951488F838ACF39EA1465650BF7BBAA9D
528714AEC126094492E6EBA614DD5FD9C5DD3CEC11DC8210FE71AB3F4013C337
00879C88376D324FEEF6630CB6FBA96B9DB1E1CC22375DA75A024DC7350D8885
F5ACE2F21C13CC709D3715590A6C983EEEE93F33C0A2F14E845B64D0A5F45961
F1B004D2A3BE4A0DA651C70B1B4D8830F3576AA85C6C892CF7C642605F782346
10B980588A5D31BD96D79CE11C9C6D7CF021C5EBBE1AA6014DCC1C28CA2C812C
AF3735D5D02F12F77508D106C3023D92A42252C0BB59CB07AF8DEBF1AAB2D886
BEDD98F86FB22DBC5AB6554D38E9A196F8FD7D4DC394360BD5C0B00854778341
071E32E30E45E9B616D81F13F6EB177EF18C964A3941F20ED153E439FCC0E238
9D1F90EE71D5CE2D6957283A9CC2F106131EB2C9E8CBE2C18218D41EDADD110C
F2E48939393F3F10457AFB499FF22688215616124EC69147F333825C068FC8A3
A7B1FCCC8FFD6C8735CD2A532A8B3A497016E2814CAA2F2708A5E4BD1710DBFE
879FD7328C1498A3BFB563E083A6AA6A1E74161F10C22E65E47ABE348559465E
27F9DAA319215E7EF02994506F5DFC256C4FC1CDF1FFD793F00FEC906E1D223B
6F595307DA92AAB845F7E6647899673777C295E490A837F13C4CCB51D6AD85D5
335FD09AA1D689B1A44D6C6AEA32BCEF840BCB7569898AB162AAEEC667A0A6F3
1F2C1ECAEBD60529ADF23C882D4FA785E273ED52156CB9AB20FFE05E6439AB11
70856DB94ABC612148359A0F37CB095C62D0C7616AF388FCAE11F42FC1A49916
A75B08E31C51FF52BAA88E62532948DB3B081F2EEC4D503A0BEC38F6E0AA9C99
9C0A1881AAC0EEF859B1C0B5DDCBE19EAA08BAC86D2F83C4C97CE57CA5C11CB5
15E2E1DED9BAAFEF8D94545E318226E63ABAC05F9949190D455FFA322518725C
0F3D00250B2572E27970EB5D85DE26BA4E0A86B49C548E517DA4C2635AFE085A
DE1E20E218DFE66FD8E0513C982418165797AA60ECFFC9F57C667789F8D0DB4A
6EF481AB9607E14DC2D37936E2B83FB99A375169F6A5A8DAB723E23A5D93B47D
245C0D660171B00B3DBB6E34B25B3E1D15DBBEEBD611E6B3313F081DC848251F
1072743FE0A0A9354CE89D66E08C681E8BA563C5289827EAECB4F74D54A2CAB9
6E83FF838C7B60B4F88143DA650DAEA491479979E0401DBF46A264D0A3F46EBC
38E0303E8076EF889E7E77617B8451825E2072C3E399089C53B45D2AAAE9CB61
A7F6FD83D3A5D30888A57353DB69B4F9E0282328D6551E49DF882FE537523F10
B2AA941367A58670975E01EDF1262C5730938F74B826389984FA8392C4B36C60
DB49F0A7379DCC439D53356FF8C8538A3896760214DA5B3488C8C5D57E23B8F3
7E303698FA563BB4D6B0076BD258B0F7342510D97D66B2203F14A667EC276BC1
D6B547978358989A796AD5B0919AA65AE0F21CF95D39A7B66D86A01E7620C720
0B646885CCAD9DF63E182FC41041F8F8845E2583D95B8F8378A49DA87685A7C8
C4660F4317ABE1B4AD31293528542CCD50417FEF66A56E713A34CEF8F217ABD8
F4F9EB88A26A34BECFEFC4DCB95E53DCD00DB7832BD7115CF99B98BE7085C40E
5FCC4427B58B883BF63FACBCFB32A10DCD81FA76C0609A1DC3B94E653DC83906
2D776EE7E6AF540468F5AC4D47C03F12E4449DD1BA7DE9ABEAE09A9951FB275C
57089225AC48C08258902FC1E23D7EFFF3DD744CF37C9A53B5A4795BA1FA1816
93C2ED0BA8C01BC3B9831DA4A58361B7A0DAC528229F0E2B51783D0095FABAC2
929779C641A6FE764AAFE2AFD7BDD805CFB635704D6D162835A774EC9DC2E573
E1965F570959DF3B91F579C1CCA64DE5AFF5628976C6EB2085D3FAA5659C05B6
3EE69B9707086AF97A6E2C3F67C31DAA9FA897A611EC462E0F5578F51B77191D
2E23E79F7445E731D647BEC6E45B02FDC5C5CFB692D129A50431F79DB3073BE1
CBF75C69FE6A4B6EE2C1993910024778F50E76E97FD870F09BB3829CD0B08C2E
93C2F7741BA04977ACE9226152641F7F33219B1CEA696BAF169A9B434B37D448
ADB21F343CEE7711FD0B5DA13D6165C520FEFE31AC4BC0EE941FE8FA3F7A0DE5
0243BAF2D80CF9D25DE88B9D20E05773061EF45B665D950D380A013696CF02BB
AFAB02FC13AF23DBC6B7A5FE3CD0CE94587059F6DDB8FA9EADED34E928F27472
A6AB9FE639D524DA4C634BDC93DECEF6874CDD4ED921463C0AAC62B5C7A90B5F
066018E5E4B3A2E5FDA7BAD42C5A8BFC138829456E3CD5E89AD15016622F5ACD
6F75904B2CEDF842832B3B3F29B3E4A685E81D06F2018821928461BBCC5A6BED
A525DAB75AD6785966A14596B88E153DBDBC74BF48619C22EF7D00D594C9D56B
ADD4C0E773E65B0CE25594DF81CFA8BCB30ADFD6D53E00ED37A465DB36FB6AD9
078B9A738FE1BF0C93247D17969AB4B22ACAEE0232ACD83A77AEB48948F5212C
24227944D6CA80C3770EB7385BD79CF3178C5737C598BF1BFCB05B010583A71F
A8F9175A26AD0CA4C694C66D8A1C6030CD5B2078F1E9BC983FDAB581F79D90C1
98FE826DFDAF6C8164F79BBCCB8B30D166562BDD503039405843A2DB5B2602F2
CCBC63B86C99AF067F086A92BDDC847A868427346707F69478288B07047F932A
39344AAF7018804BE9F98CDE54B433B3A98206717A4A31A1095FA1135CB76A89
51F49033D06CC9F13E0AA7356EAC32541EFD0C311473DD1D89F2038B1826BDC0
BE93C064606758FEFE049F59D4733329120C322452CBF86C94492A440A0DAC50
FEE5A786A1BF028366780D6EE30E84C8AE22059FDBD7BDC62B3EB3FAE66621F4
804267CA13D99FA9489B9CEE8EA1CD728569A52EF81A2EB66E3A5B03D30FEE4A
98287BEDFFFEA8DE4B9A330733F45AC43822F8CE20A19527550C41808E95BB96
7FCBF827033A97FB2D24780CEC6D559DE000CF0960D4F9AD9B78B08BB8F04E6B
FB9A3182D5B0701FEDFF1D40F5D06702793A3C400E3173BB47C1909731363866
566C008114655CE804B7463204E9C87884197EAD375331E5E0D42B1FF0A21DEB
45AF9F384594A815FC43E0B2A4FEA53F6EAC5F053D6173AB40393610E9352481
2BA370D24532EA73335C6E86EF99F7B45E33E2B7BE0003EF5D0E018926BB46D0
10FB307E7C65EAF4AAA5D7ED327FF19B24D8A8243B947251BE9E286D1A651D95
5474967648554AB6E4D00AA8513585AACA0A03662C31C6006EC3941FBFD11C55
78A05BD5E89D5AB8725494DE9BE3550102254A987097F447A890A1701236E722
AC426BE9F2D02294B16992640A39D78AECB6FFD4DF77D67D395C1603E11C1F4A
706F8C2B962EB0758D5E162AC6B9130B8DCC05DAADB1A58A3DEEA91A310E2D1F
3A749AA545F27AA3503473ACD1955F01DF5E1763203B380915828E111CD94133
E82ACF9D2ACC562E3947918653C91E903C6543C734192CD2E07970B157D0D4A5
6FBA75FE48E13B4865ED79C52572D58320512EF708B178636F8785902E257B5A
F4F629919B5E329F0ECC7939B5BDC9D4A4DC4E16DB171721909CE633C8C06CC6
82CFF51FCC776C0A7E1848E0CA06DDD28657BAF8B5AEFBC4E22E1985B0C46315
3BE507CCC9BBB2A8B4C2F1704438E6794D34E79A6B66DDC9D43486DFDC4E01CC
9A2805FBBD5ADD49795B93A36A076151B554A582D48EA29E8CE76A550D551634
7BA7817403C451DEA1FBD7C2D370815095FAB76E6EED4FDFB7545F231FE2541F
B693A5A960CB0F6DD0BC917FF81123E72A67918B7D0926B1081790221A31A2CC
DC628E555055F0C1BBE122C378E0F23B536392E698B0327F4A47B84130C741E1
2D3CEC381E0C9D72266C9E14A778F0D1DAC5942A327979DD7BC68CE4442B9299
8C440432295CD1F8760ABA7DA766948F7B1572844972D787730FB25049603191
71E0FB765A3561DEC7DC952AB238BE04279D04EC04C0DD21FB0C9F8E469B91ED
4C2646EDFED2B0C6C3EA05E89450B569695AF6037B9007A86D4C75A7A7A15237
95E7C2D0FEDAB074E6BC0DA7995A1D9477B332CCB696818452CB0B633A9EDB13
43A94740C33C895BC2FED7686417494DA3281E6980A327C0D78E4418DFCB807F
2E82337E22A12E9A4EBFC05F7F91B7F02F4457E2FFF90EFD694DC5204A24DB0B
5B8313C5C1EA443ADD7BE8CA1155EA0A9A1733BBB8B3A587BB592B24F0102474
33A67314D5E81F44552BB6E18E60AB193F23CADF78FCF69F3949D36E31363FDF
624A251A7C763E811AA11D5AC40A7BD8AF07DF37BBD580589EB7F309D4410FDA
7978B3F8F5264D0AE3200DC6ABCBA2BC4E01A77CC30B61FC1D02EF763C942EB5
373783754F7654BCEFD04B9F7316A4D25B30FA899EA28EE64D673FF778A4FA10
AFB388E44431F41CE2DCC7BE7B617833BD6E2599B1B4D8604A31F9B55544D47F
B9DCBBD51C8B271C03844B0C5A374460D79085568F498D2242BBEA9E10569F17
BDF6EEC83B3509D03460B254507B7CA0C4987918BF28CAF2A8C97299284E3DF0
E3F219E724A5062B49FB6CED2A1C6FA9589C6C2FB1F64A88E13381C559BC5A5C
0A77BF55DE5F35600391726367A1F75BB784263BE42D5DAFB74DE95B32BCC407
F206185E918016CB83D472CAAE7648425FEC06A979D0FF8077979084A9C33355
9D4B7F325451AB0AC22BE6C8F99ECF31678D23D6274244CBAE3122CE8162036B
806BE4B6AD4B58E0DEF235627E7DFAC0B16889CEDC4E10AFB4717709A257EFC0
CD2A32C25D4E582A4CC15164C65702CE4766602AF74F1F315AC25279FE9CBBD6
011BE61EB36A3B5E3E87E4574B293AAA0F27A64EAA4791D32FEC6054A538D6C2
10318BBD77BD094EFAEEF19379DDAF460C0800163E8990FBF7DED23B78382545
F1A1BF4D15A945E047E5D4E8092AB77396FFD760E2CBC4BE1F417C689D116BA5
0796AE2083AB627562BDF04A102C6B9B843E6F136FE966FD8079CB08EEA3E767
B92B7F956031B1A3C1EB94228D04CEE11BBC53579BCF4522F19F097621CD5800
064FB91E44BA10A3D6CA4EB2122699E4443AF720D3CF5379F7843DBB90A9D3EE
F51BA5CE58DA76080AA29FA2B23C178C6627CCB4D2D396E7862DD0BB81C971E0
12F230A07650344DAF45035CFDC43BF7CB11860ADE8F3B10274B2602ABBD634E
B792674FEAB8DA3C82119604C8EC98C2DCBEC1FABAC0317CEBF7F52D83565235
3B0203CA344B48C0F0CB8E2F6E2F2F2705F99C931C802F0BC32749A4F405E90A
36431E8D6ED5E26B7EFDEB2E1206439838FEB26D9312693E5DCB623EF7A88C66
46E78A0DD340788E0A146C1F0B6190D272204AC3A68FA65493A35B11E640F3CC
27C63B51E4F0EA608BD8DBEFC2A108DA01D370892D0053C70A8A4AE9C9CDC08D
1545C24F722AE40A028B98F990B4D080315B24C663C9C4A5873273B50D3B6001
A80CFFE3BECE0ED04187634B98007E41280B40FD6BA2D263ED591555499F1620
A732FEECBEEF81896CE876D9B2AA28303C91AC6C89EEFEA413DB3FF0F2B35C29
9C768B461D70B7666EB340B0862E3BC2B59108094C406E14E98F9A5C0A92AFEA
A3A52BDC533EB7CA53241327CD1FF1E51D9DC97C5012ED4B4D05A572B496CAB4
39701B7F7B4D6C498FF986518BF76CB29767E67641EAC9F0006066E2D85B3AE9
D40651C731C23DD3E2BC05C110E9B616A6A4A691ED7BBB650E6693CEA46EF483
D104F25C760D4938C43F88C79B1DD72297EC3102E9642C97C19A09964DB7BD35
BDA66D0CE109824E494C346C858E4D347FD09B6717281CFF947B656F2E54B984
54E9AE417EEBA92F578E71803658EFFE4F9DF1ED6BD31CCC9689F75B36B73EF2
C4FBD6D363A69F8D4C5049497854E7E348E28486909E24F82C3663449468BA23
49E2C0FCE89E26B7EE7044599EC0E28067FEF1ED0A54807E2A42B77E20743D9F
A4976D9E7850C5330491403143EFAC10D406BAC04BECC5C63E7CA7D30AC6329A
5F6B2F32C15404F31EB4E8A964049ED79058E0D0CF60C5A5CC714C4246923E1C
39566862B24857969B779D0AA48CA9FD582D7619473F6587C22DCA3CF9012A1B
DA8F158E0B360EBFE07CF6B5DCF6ECC401D996C00EDC93999672C76F096FEBAE
9B82EBABE9071B173EAFDFD01B10EF3FC0651A91B732EAE17E43570A8DE0E45A
E29CD0B5B4698F7C71B9FFA86C85B12153BDB125482441673BDB59DE7D08F7DF
896FB2B8BAF37239D863FFBF6A1E48653BB0924450D7DBD89E508ADDF1294C24
1E5688877C933DF4820ACA86C539B99D26D6D2B2D1999DE6DFCFA569853D9623

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 21313290 14208860 1000 600 600 (test22.dvi)
@start /Fa 135[48 2[51 35 36 36 1[51 45 51 76 3[25 1[45
28 40 1[40 51 45 12[66 51 4[68 8[62 1[66 10[45 1[45 1[45
45 45 45 45 6[35 35 40[{}30 90.9091 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 0 TeXcolorgray -278
929 a Fa(1400)-278 714 y(1600)-278 499 y(1800)-278 284
y(2000)-278 68 y(2200)-278 -147 y(2400)-278 -362 y(2600)-278
-577 y(2800)-117 1021 y(1800)488 b(2400)g(3000)f(3600)-472
154 y
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 -472 154 a -858 176 a Fa(Execution)31 b(Time)g(\(s\))-472
154 y
 currentpoint grestore moveto
 -472 154 a 552 1158 a Fa(Num)m(b)s(er)e(of)h(pro)s(cesses)-600
1200 y @beginspecial 50 @llx 50 @lly 374 @urx 266 @ury
3240 @rwi @setspecial
%%BeginDocument: test22-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: test22.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Sep 13 15:08:57 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 374 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test22.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (C26973)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep 13 15:08:57 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 374 50 lineto 374 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
63 0 V
4744 0 R
-63 0 V
stroke
LTb
1342 1220 M
63 0 V
4744 0 R
-63 0 V
1342 1737 M
63 0 V
4744 0 R
-63 0 V
1342 2253 M
63 0 V
4744 0 R
-63 0 V
1342 2770 M
63 0 V
4744 0 R
-63 0 V
1342 3286 M
63 0 V
4744 0 R
-63 0 V
1342 3803 M
63 0 V
4744 0 R
-63 0 V
1342 4319 M
63 0 V
4744 0 R
-63 0 V
1342 704 M
0 63 V
0 3552 R
0 -63 V
2944 704 M
0 63 V
0 3552 R
0 -63 V
4547 704 M
0 63 V
0 3552 R
0 -63 V
6149 704 M
0 63 V
0 3552 R
0 -63 V
stroke
1342 4319 N
0 -3615 V
4807 0 V
0 3615 V
-4807 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
LT0
LC0 setrgbcolor
5294 4146 M
591 0 V
1342 3731 M
2944 2391 L
4547 1585 L
6149 1059 L
1342 3731 BoxF
2944 2391 BoxF
4547 1585 BoxF
6149 1059 BoxF
5589 4146 BoxF
1.000 UP
3.000 UL
LT7
LC7 setrgbcolor
LC2 setrgbcolor
LCb setrgbcolor
LT7
LC7 setrgbcolor
LC2 setrgbcolor
5294 3926 M
591 0 V
-4543 85 R
2944 3021 L
1603 91 V
6149 1689 L
1342 4011 Crs
2944 3021 Crs
4547 3112 Crs
6149 1689 Crs
5589 3926 Crs
1.000 UL
LTb
LCb setrgbcolor
1342 4319 N
0 -3615 V
4807 0 V
0 3615 V
-4807 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 825 -505 a(Copro)s(cessing)g(time)p
0 TeXcolorgray 1045 -413 a(Storage)i(time)p 0 TeXcolorgray
0 TeXcolorgray Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
