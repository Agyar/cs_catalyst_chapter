%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: test12.dvi
%%CreationDate: Fri Sep 13 14:07:13 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 324 216
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips test12.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.09.13:1407
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 69 /E put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A27C8E215F5894EAE38B79395F23CEA0624BAF427A30EB6E92993B9
DC53E690A5557FB4E93ABE9F95A4D76117CA26949D3FE6160074A98F5E9039E7
79B826B047A5B9FB43E3B96CB32927A36FF5B9354A2A44CA18B10CDD9DED32A9
6DF332C5E4270C9ECEFFE63DCCBECA12B839EC2CBFFF7FC9AC13F612CC0D7709
DDE2E72E16C80CC9C0E7940FFA97F2BAAE7B45F5C95044FDE2392FAEE38BE1EB
6D086F2AB69CC3F25DC095FCA2071BE8C67EF945078DCDD901074A7A260038D2
81FC1CAE2F2C0EFB48D54F40616650B24F804069039B2B119DA89FCC5D526829
AFA5269D4358147C82353C2086E551C702935BB5111089F167B7917C74C072F8
4DC47B5496C03BF3DDFA1BF32D8F4B09C5A16AAE28B0F040E7EE32051306E182
3F29FB7E3A7C2C38BACBC1CBB32F277C3765B969071CF2D0CAB9A7A1097F300E
F1212A5129AB2E71A46C3AA6D9B5953933656C79DD1C174C26DD97D462B4323F
33B410DDF14F0CA9A2241619C4B2F00E32C603FC2A137FC9C4B873734418A4A8
02B852FCD1E62A7C503538F9EB68414E6E1A478D5C2A0D08CB39DA7D5F522A4E
D633EE963F24272A6677F20E75A8F7FB6C1EC7E50A4654EB713742AA95C63E50
BF80993281A0613CFF98053019F57EFB45BEFA31708BF7B4F1FDE43D1C1DE8C3
966B2B1A6882B9E5E1A03A3210CB832B0D6252BCCD51F11371D3CFA6BD69C15F
74FCC0988DEF8F7366076847370B5BC9EA4ED97578528B5DDE907EEECF4D4BAE
C207E6D97A1CDD7F732EF23A97E281E39E68B80534BF71185D838E564A9DA5CE
D3A270530780EEA08AEC4786551B7514AFDF162BEF21F4A789058F3E4A6F5A33
9DEA97C2AAC89F1649C64DCDC50A04DD118544DE01FA455F816C839F2BC92D81
1CC6DAB13EC788C3D4518AA69116755BC88134213197A7695B6DB944F4E1F391
4CF2CD5C10E033C1ADE4F7073A6E046DA695E4F43A16764E9435A1D116CEC665
F7AECEEFA0152F4EB0F19C92676C29545085A4DF6B4B1ED161ECA04B3406C140
9709A6476CBF11C9F35A4C873C2E5D608880DE57B9D3C3FD03EAD7ED16D1EE10
374626F44442113CE476AB1532414904B569C16DBBC101DB11A2A1B26DE398AB
F92109AE177F44787B394B610BEF337C5EC6E370B94F19A5C766319F35B062BA
BB3DCE5EB702D2BFC3591885112E31C6DFD8E9EB8FBEBAC1F28D2011FC1FFE67
26AE7DE624006CE68F7EDC0AAC6DA6407D2629816D401982539FBBD85CE70771
7E9D0EFA4F3DBBA7D50CCD6564B87BBCAA0E40A547E47F079F706B039D032461
6A7084723F03C6E353655F0C806A7F79AB16E33656BDE0CF1F6178256253093F
0BDB2FA39CC673154B9C531003F1D94C97A8F65464577DDFC461E6ACEEB25CAD
1B04B9ABD344768EB7DC6A46178EC6035FC8F3399F07B6CD646481EDDD8C3FC2
A00E05F0566A4AED40722B875EA4CE8F98F375DFC1F8D787F99305E1546CB39B
3983297A8BA83B0B2F61AE4A3FC9A5482488FD07A236E0AB3F2E9FE6A9BCF820
FC382387ABBCF9845D7927EA76255F12BBC3799D4946E64896CC6DEA0F7E3AF4
C39EE4E68AA31889A37468BCD42D8B31395D9C7991FBB1F82270EC3359C64DC1
5737DE6C39A57A889452D995D8DD5BFBECCD9E0C1332CFFE928E9213211408F3
C873E8D18855F9E11541E812304701E7B70BE19A5A755A88C29D1778AAEBFE99
BCDFD32E36AB8BF6ADF6CE61F8825AAD423C4D4165D30208448C931207F2910F
F0EFD56598F4761F263775A92715C068906278B3247DEC1C6A3F722B2F6C2CCD
F6A836E7CC861B8131DCEBC32D0E25DFBE31C773C64A91510B606A788B86735B
C9DE9B0A4EDAA17B32B7A8DB8CEC4918D7FE142FDF311B5ADE2BB26956DAFB4E
8315E3E28256C306AA7C8A26591C258C4BC0180ED00AEFBA5A2A7B9BEC5B4DFB
C7D89A16E47A57BF96A9157BED25298081601534640AFD502DFE36AF10837B9F
AE2D16C78DB9F8BB7DBEBD3B6C045C03EA13B6E9D89C5B5F5940EF2F7166C215
2C61E38720E5A7B75CF7851FE55E8D2EF7C55B349D510776AC9E6E1B71655C46
DE24BF6208052BC46D3D72DBF4A01DBCD0D0E7BDF7828B6F832DAA04AD547A4C
D3C7D183BC2E398FF2888099D1CAF25B3F582838864AF1F24EFA6D47B416BA65
770E85A8AC196F341FAE4CD71B82A7C3F081F5A258A64FDD2E4BEF6F2D3ADD02
182DF18D6A4A91CE237B8ED9D9F9BFBAF29F60E9A8E4608181A8AEB27CA2D841
EA02BEF4AD060A6FBA4F98F1E30C448F263A767AA3821B284B1B7E82C3396CB8
9BA225013F5D409722B1A783A8EF2AC87D34B6407522AB33411ECA47D9771191
00E539C2382994EB7B0C9F7649A8A41308EE8944E1442E14391B45178D2AD8C6
83D686B9CD02E6DE414C4BCA93342E6C3B24A89C045C904AF7897C4E227C7A05
283FA2BDDC5F8919D2438C30BBFFC5706ACF69AF68CA305680AD2ADAA80D58E1
CC2CB5A8725240EB690748505BE430DB8E218A398562E2E6E382E387E14D829E
48084A5F61D1DC2BEBDD3FEC7A79DA57737852469ABE08037B5C7C14FD15EFBB
2589A3E222390A08E90B60AB59447D0343E119762F2F744EBDAEE29C212731C3
7A3C2AECC76D16E0260FB4045602F7C689AF740105AC3D4616764DBF29753649
92B3996EA3B4F30C40106141EEB17EBE2646205EC3BA815C375D65DA5982B548
FE67F06C802F4EBD68783B63BADDD360AB1CCFC499EAB7734A75331A8F9C2715
4B42BCDC6708B63DC1B405D940892456CEF82440D9A7E3DF014126EAFCDB7692
A35BF0D1535FB840E40A333CC4E6B305401207108F3D4D7AC63BE03D71F312E8
D9A5996A9BA9CE91A171EAAF22A39BF3491AD6C66659BAB7F0FB5130E0088917
D33F5C63B751BF5257664D35D832ADEE6B9F340E02B0B2358B2AB21837B2E69B
15633EA607EAFFB20EEC901FCDA048A7C650C28D41068B48A10A102081635B4A
8AFCB44B00504D4C3AFD7C60CAC4ABDB3A4AB78030DBA2931EF01B9FDE1A2520
31BBD875DBE5F230A1C8BB6F0CD264A74F34C467095B7BD881B7CA88FFC90340
8B4EE600F8290FD25DBC2F4E45C9D788338E8C4FEB0DD36A95F35CBF45A4A2EF
6D8C40690111F3DDEADA59BBFC25314D4296AA38B496EB99DB178D28B136F4F9
469D383C3103CFC8EB71DF9C0B92C7DD11CFA4BFC5B24841F46EB7DC67638188
54F3F8A724C693C2B8A6A5956B7B47FEFF3A2DD7195E5753700EEE8D1EA72846
592174F0FB82A20823C8E597F2073B6FD550B04C796FA898F4B79FC01D79A3CE
5DF67C7A8E62C49F2AB8934655FFD4CC5C8DE59FBFE5C6BCE83D479EA9366DF9
68E0401CC7917C9ED21101AA0956A33CA455CFA591339444FC079BE1DA115B9D
593A7C1A163E9D0CDE2E1BC682CB6F5F31DE1777D4510819255315BA207A8EBA
94EF01BB6A9B4C59B46E25BC1C7BC331720FEE80C43A6BCDCCC6AC188B993A53
3CE0E76084464CD3D664398876A0D230631267081DD67FE221FE649029533BCD
6E3F4225EF8EA18E7C21A8013E4E3AEB667DD0E8398E1EAE4385C56560CB750A
0AD2598C578FEE91F84FBA1A0CB95A0C6A4901E758A7104E5B60D114228AA8C0
CBE68D3D1A309301E43FAB464BE90048D6781DDE46594BF4D608E3C4DC72E288
91F71C632AB4439A628F993A39DF43DE2F92641B8AC0A1D563BC37B80F862DCB
64999451C8971649F5CF4E4DC89141FF454E4688CD5980A658ED865C1DEAE2B9
0181BE3D288FF22E2CB785EAB45A9B328050F24C46E89DA683A781BCE2A162BA
1BC6BF014A1589CC1C2016CDB257400957DFA97761330F066FEA4452CB1CA4EE
EFC3CD2FE26B5C3ABF72AB60C3782A693A69FC6F28D7DC71105A3219354B9CB9
B2C921F6ACA2C68A82B3F4C45F1A48D29B012DFD3F80F24A6F43A206498A5F90
FCDDACF8BE0B7AF2314D5C7E655E9EADE206D8A1DB6D13C3DFC31F8C8A81F7C6
67E32C2FA1CFC195DB90F176E2FA87BB3B93D69F142F89902BEB7F8DC5F8FEA7
C63FD5C5B4A1D12BDEB0A95E3995671DC7E7703894AA88F919F59DBA72377A80
C4654D65585454B800C7B1B81EC08E9F58EBD8038E8F62ABDCB84FB914229200
1A4CB74F38F7411277EBCB74ED300718AF7104B56AA97DF56EAD3214E1BE6661
31D8AB89BECF542CBAFB683A1A17245962F103136EF1253EFB8C7BBF0F8D373F
3C9FCB6A9E2CFC61D85A15FD05B5AD036D47BB7CA6232ACE37B841E990A9D98E
5EAD514524CA581C053BEA6249403A96A4F453FCFB25A69BD6BCB29C4DCC9924
D4649F39BAE922C39AD876D362FADA6A63247D200F314A603D87010EC942DE77
79A6A14FEADCA58C6A44058E4E5ADD4A69B1E3B76FBE654DB6CF8A1B5778E621
42FA15A2D1F9F02905546B6A6CEB35C68CA9B75C52D878692FC56C1A8D131D6F
EB9D7CD3736A1EAD33459E0BE6128F3B89BA5375561BDD526E8655DCDB205B82
F572D43CCF09787744D68C0F52BD9EC6AE84A5FA9345141D3B5DEDAD52C9E716
67FD93FD5E2F01C42DDF2214099E7AD8FEE0B9D39360350EDC7D753C9BC53B51
444DCFA55F7DE15B31C2C8203A0A8E5C3998334F901CC7F892BE47BAD8C204D0
73D87F3CDE549282294CD549563A06D9899865AEA8FD17C8C370C147FF67B339
B58368472105C2DC4BF416D082DB5E84D304806D7715C78490395AE91BCC7102
804A3629D5774D25514CE0C5EDF5BF80564D106230A6CE049C3BECC46554FF53
FADDC71919A75A32581253F33FF6B70438743CEC91FB8F44B541601A9231BBFE
4472524E86CD1AC3581157A18C68D2F79B1767881071BCF4EB1F200B6AE30CF5
05F6E193D3F5234128DB6E1E8EF3B468981D7568C4AF05F78B31DEC06D99864D
89353C17222FA082717C51EF949342DB85249EAB944D4E5B4A041A92A2C242CC
7C3F148B373CE67A5037E253384076D13754465C0185AFAFF5BD34270B97F55E
13B8B87961B8BA1C098E2F3B249978AEC553D7966683CE8E734BC2337BEB55AD
B110D01265AC67022E8D4B19504B317459F06B6AB97A7C76FF8D843CC092318B
5B06EABE1C2C75FA1AC89C6350CAFC136C42C004ABD403577A21A53B859ED5EC
8929D1B88429D6FA5CDD463A8E03CE8AEBE1DF24A7DE268C2D7A088C887C84FE
A1163DD3F4641EA874A82874BAC829F33672A3AC45CC7A549BBA38FEF127A853
4094D29655786AFFFEF27991529266E9555429D4B1ED79A6687BD9F33D193276
6A25FB12A027296BD42791923C6F0A92E1C38F5C3B819C8BFD012F2B03F833E4
693095ADB0DDB7161540BD8127F543BB748F077EFDB46883B6DF7AA8FEE67A45
854D9DDA162A0643B050624013BD8327C5A03273BABF2DCD0664ED1735674F1A
6F6F5A602DC72DA36153669CFC0174B4D8EEC33B43F6AF2AE5812B1D4352AF83
2AA3FC6D15B24C48444D2E18686FA090BB954BA3546B11627718C3ED50BBE751
B2B34C8D7AFFDD22D6D087A4C0C58C52DD99DFB2CD56051C16DB5B1B20ABC7B8
1332155504CA23684829A08C1309805B2C2EB1720AA2E5EDE1807139A350BCDB
7E41B7422C91E1D7A1E25D3B2EE2EE746CA8D11A84A81434E352D4F94D5D058C
A614B908E079AD844C140EBF4F420263A9645F4BD76F3E155DC3E6A6B2AD2BA8
AFCA5CBA683683A57DF487F2ED1FB89B3312353A7A99F6C0D7668E8D8B219685
522D585CFC94165446C51CB1583357A62F760BB76A25DD4A617A2808EBFC66F7
C7FB4D3E7E1C2BB25F41EB00734BB2BE5A83FBE336D80A4B2497A743E80394AC
0A327DB504DFA4D9FC21094F06047B1D6259D70C4742C6A405C3B074221A5CFD
207E8A1719FAC340A3965D94E20F16A075306C9B0404E3163043057703AFA8E8
5754B80046967A3B7CC8635113D61F1865F1F50680344464F5C9BB1148CCCBA8
20B6E1FCB242D06C1BB9C6051300AF6C3DF692782A3D4876C976C59D38E06D76
BBBBE2BA35B6818C19C06FD41F0E2601E82D2FB80B8777BAC41249BD8403BD11
4192D0CEE30FA9954FF22EDA8498C9F16B0DBA805E7A8D382159143A3618DD04
63267676866C23948C0491D7385AA1EC8B376C20295F0C339ADB39291A5B113F
128E4D4E2EF64E95D72D3303263BB20061DCAFFB9E230596FBFA8D21B4FC500A
F7C7BF061796174B7526B2AC88988FFC1BD56F214D6C73204CC167E19BD9A143
1E93546F6CB16829C6A612E5B90F2570FC0801F5A5C2F69807B56C15D65E4BC2
A486E8776BA502ECCE156AADE442919BAC24F82AC4E9ACB97CA99782EDD4C94F
CA1FF9FAE7F12DB2EEE8B022FAFE384B94A8A7F314CD7EAB502364ED5F6F18E3
A1CEE5AA18453AB0A14FC1C79F851138A65C4C1C62AF91C030D6B0B3711C1864
CA167F9A2268355DAC8707D01D572E61E6249704652212B9BB6B60B88A3FD66F
FA2E4A3EDB82131C2BED73B174EDBC41E7DC1FAEBA71232A8ADAD27276E2C9E6
BDDC122C85205B99E8B80729F16CEEFAE1F13E3A8043339D2C6C7D2C5E9F2D71
19C21FA7D982FDD8CABE8DA0F619DE27B9B4FEABA40040F7DAF2599EF2718C97
1C97FC75C1BAC621F5D49C36FFD2A893F73905FFB9949BAD9A56FA3AD7CC7436
6BB2718D85116BBA2FA188248F7186132A132DFDC0885BD16902F36292335647
90FE19C24FBB69932853B9E3121D57854B80E7BDE4DF3BB3DFB8F9973BAD691F
69BB3EE53A8892142771B4F2CDCE3B74095CD622BBF87E415F8F18D3A662C0BE
3225596CE484FF3FAF535CCB185DB2E7389EA73FE41BC9A94C7C4A40D13A5D80
9624F9F2F38E38257D1936906CC818A9DC2B644B3F645F3D5BDC56DB82DE99AF
FF4EA12E08C7CEC344ACFD20A3298CF30DD454101C5CCF7EA455B440BC158F34
2B4E1753C5C1D82B6FFC479E04B347B1D93BD7B1FD36DD8F5979933554DE198A
259027764F0221CD8E6197076DDEAF4FB1889549A8641C57284BA4EF0598CF23
7F45CE8446F50484C39BD49B0E25E663B9032D3809541F64698B5161D9FB1188
9CE03CEA514CA1E56C183DCA9B06D97F765625272B9401F7A8ECE505B119CDE4
8F2C5B3D2A88D5C291815E0AF45AD9054D5B1012E410F24DADA745E020D21120
0A3DDC331B736AFB58B5772B9460B5EBB81919B80DFD5DEC17D9AC638F47E152
E0E7A70ABC0D8C84F898DD3F487DEED2A20C54C860E4FC956A15DF1561ABDCCB
BC72F3D3A0EDF1194BBCBB159E3233C13BD84AC9F7D8B170180ADBF259AE0E31
5DA424B4D36CC7D5C06D372BD3E8CD244DCB8F31AB3F12CA0CE3B8A18B09A9DB
65DBF56C78AC6AD906DFB915709110E0A26B5B153B0BEF0EDB37C753767EE8C6
0891F16E8C63D6DD5559FA3D3FCF241AA96C0193B195DE047D6BBA0D7F2985E3
095C60B75365F65A2E3F9083B908A7D09A4741ED796E3207B237D7E35344AE18
7609A37886285E0C22506B4DB51F923EB30148BD1690B1A0601B66D0E46AF183
0AED1C168DD163DA9450978720204F9C847C40D77AF844F6705AC8BF46F5ACE7
727793281FCA808C88E420143A1F96DBE082EE1B7CCAE389E599F2E389A5A368
DAC69DA88AF64263F9A6C0CAA6B4A0C531B210300B4F265B0FC1BC979A265C94
6FA3A8066704F5E2B4F2648DFE008AFBC6DF7ED7B17B44C137BCB712A777A352
B6EA06B6D16F17240845F33E8F8FFBE0A2F0C2F03270F08D581BBB9717347E7F
1C459942130B38A7A1F42C72B14CE960F3194BC085608D462102DB4A86C81C24
44B29C6927372B3B7518120EA7A4E96FF50BD7BD15224CDFEDA29A1FBB45E440
ACB4EB2524FF2C2305D1486C4A58B6D6A0489EFA11E4F8C9805D6E491C41BCDF
7BC70C4F77BF6DA7640003D2E2D2B3327A43577621FF6CFD4BE53F478DE69B78
CB9F09B0700978CA9B6B2DAE72214B79000B8CEC48688B1A22525A15DF2E6DDB
2E9302AEEF129A331ACA8674914176BB6EEC17868EF6B75910718EFDCAE3BCC5
50B90C24097A33B9958F7A66DCA729E36EAEEE32F725DBFCC41E1442E4CA91CC
97E266BEA49D45E0FE3C30C0A13F98F48A2897795F89BBC2B84A0B7AAA71FA26
32660C13C512686E71623F1D057E9DBD20C2AB171BD89CAB40284677BA3085F5
4B6D0DBCC5D71229BF371AF80FAFC79A2515E765A746BDEFF8A39732F4C3E9BF
EBB5FA3812581ED0432C1D0B1E1AF994E18BE35E999E28E2FA871CA917B01604
410EEB37723A9B865044863222901582DD24BACA391362D038B3F6BD71725F92
D2610C2312EF65D1FC59DFB58A32ED70CDC696FF5C602C4BEFBE137612928F1D
4B48289BAB15D1F7A5946BC41B40ABFB7CE65528B2345C7DB5CA1738E0CC2509
0D8488E102AE9036FF0EBF7DBA69324C0FD1D676E9928683C13D14B792C9A762
BD2ADC1B1842482A7AAA3947D03BD62CAEB6FC0700C0CF04AC98EAA885329B28
CCD6A8E5B3F4948C3E83C32F5E7CFAF4F11D3CC2F853C374CA6456635E302A70
46F1748C193148DCD3D8EC5644AE2972BF60E68E541F969497BCC3445CC12D3E
564922931A547AD1F56BF34654055088ED60EC2DB03B229319FC21C1E75AABFB
7FE3A4892A30DEA33F6866E19AF31B8A729A9283F08823BC99C8436CB51272F6
5B8B8AB9944EDF60674940596857946AAB88B353728BD1F1DAA8BF15E7E334A7
E5C680171DA1EF1594B755D98073F4510916FBEFACD2E88FF231A902A4CCC1D1
FC918FD76C81B6B110E0E678A834E12016DF93F5AC706ECB1E0AFF11C23B1478
5A18CF77B3BDA75CFA8C833336F2CE1184E77B79A5747220229EAF7AD062B50F
17A30811C891262F306A12CA7333704A6F0E97C3291C44DFEE4AD9CE30A14D77
55489923CFB0C78BD5C128F32559A22A93F83FDC0F006DFD736BE5228DB9E73F
D8E7662C105E14D91F11CC98A96EB6AB8B303480DCC20A3BD38E60FBACB9FBAF
3F055A49252D2C587E900EAB78DA94CCB41F04A57BB1BC85E136FD638B8AFEE2
1C3EC0D5393243EBD8A7844602CFA5EAE2D3118AF379EF9730A2E408A752BA4E
F5E9099290B92DD1497B3329B7D7AF39BCDF8EBAF82EAC2268BE104833EE4BE8
D7411EF745F650F57CD4AAA8C2C66878BF23CFDCADB449C6F499BC7ADD69A997
1FBFE79BCF891ABCF85F1D09552823712B2600F70BAED482495B007AEA32C4D4
2B9F2360E17123FF1EDF226320BDC4256B1619E9B0E372435453F18D21E99CFD
D5E06F1EDE1CAB9F0C083DB64FE3C21529FDE6C26E99346F9DF2FB7C99DCDA2A
789F28F8C9FDEBE49A2CFE74925A3015F568608C6A8E3533A05906D950E8CB11
32F2E63076CCF29B69E08F9E8FE7DF1AB4C5A097AB70A0FA89B9B20B34D80879
CA34B15315136717F6ADE9F8B4FBFF8E99A34D141FA2200006F4A0B91477CAA7
57D7129E8B7524176CB3A576CCF121447A850208FBF251F8500071536523BE6C
433CCD47B75DEBF9BAAA673BD102069471F77E28783A66C3B9C0E1BEF6622D7B
464A88C551EACED786ED88003914B1F05A3ED67417D24D3B5225DE4F86EE8724
6902C8BECC13B2C8DB90AAA861EFA2D50EC5778DD6EAB62D4401C6B8AE1F3311
14ADC04A27B4F8DACF8A13C2538945FE1DB725EB39525926DE6A55C026B8D8D0
C6369AAA708F0281892698D234F7E3DE780FA3D40985DA89D3B87CAED8AA6BB1
562E088756D51A5BB70B12BE15F77D00A25195B7C42512EFF0E5AA76A62B4B5D
2828117A2E6C941FE532E82B75265A3D07D8F4F5CEA6C211CA54DB5B339AF55A
4C05281A3F29A1AD3948C4EB676262192C18FF868550A0E9B87596BBA7C975A7
3B17ABFADCEDE5C6ECC5EC4F116760646D8AB00C204A3F30FFF32AB2E350B4CE
AA5B323AB5589DD0430DA0691AB7B2AF4AFE0B32C26195645E218DD348633E91
2DAD2028B9DC6567E5DE5F5679928B0565D47083E905070110B0E8092FB2E0E0
B8BC60F8C4530012A4FAFB500F57B245A0A489E3ECF881B9960A9F13E8211822
9703D60747CF08DF3428EBC669C045B2FCDC1AE5DAA605882A57F39C6298E63A
23C1D66A1CBFB845D525D11AEB1CAB42CC26C8636FA575D58CE36E52CCBF3860
5B444A409CE8E99F7455CB3743777323AD5E02DADC239EC779139558FD138E4C
EF324184C6569D132FE9647C494C5A112618C6DC440765FADE8C6D0A16395619
B85C7C081CFBA04ECF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 21313290 14208860 1000 600 600 (test12.dvi)
@start /Fa 135[48 2[51 35 36 36 1[51 45 51 76 25 2[25
2[28 40 1[40 51 45 12[66 51 4[68 8[62 12[45 45 45 45
45 45 45 45 45 6[35 35 40[{}31 90.9091 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 0 TeXcolorgray -278
929 a Fa(1500)-278 762 y(2000)-278 595 y(2500)-278 427
y(3000)-278 260 y(3500)-278 93 y(4000)-278 -75 y(4500)-278
-242 y(5000)-278 -410 y(5500)-278 -577 y(6000)-94 1021
y(720)176 b(1200)238 b(1800)f(2400)g(3000)g(3600)-472
154 y
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 -472 154 a -858 176 a Fa(Execution)31 b(Time)g(\(s\))-472
154 y
 currentpoint grestore moveto
 -472 154 a 552 1158 a Fa(Num)m(b)s(er)e(of)h(pro)s(cesses)-600
1200 y @beginspecial 50 @llx 50 @lly 374 @urx 266 @ury
3240 @rwi @setspecial
%%BeginDocument: test12-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: test12.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Sep 13 14:07:09 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 374 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test12.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (C26973)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep 13 14:07:09 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 374 50 lineto 374 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
63 0 V
4744 0 R
-63 0 V
stroke
LTb
1342 1106 M
63 0 V
4744 0 R
-63 0 V
1342 1507 M
63 0 V
4744 0 R
-63 0 V
1342 1909 M
63 0 V
4744 0 R
-63 0 V
1342 2311 M
63 0 V
4744 0 R
-63 0 V
1342 2712 M
63 0 V
4744 0 R
-63 0 V
1342 3114 M
63 0 V
4744 0 R
-63 0 V
1342 3516 M
63 0 V
4744 0 R
-63 0 V
1342 3917 M
63 0 V
4744 0 R
-63 0 V
1342 4319 M
63 0 V
4744 0 R
-63 0 V
1342 704 M
0 63 V
0 3552 R
0 -63 V
2143 704 M
0 63 V
0 3552 R
0 -63 V
3145 704 M
0 63 V
0 3552 R
0 -63 V
4146 704 M
0 63 V
0 3552 R
0 -63 V
5148 704 M
0 63 V
0 3552 R
0 -63 V
6149 704 M
0 63 V
0 3552 R
0 -63 V
stroke
1342 4319 N
0 -3615 V
4807 0 V
0 3615 V
-4807 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
LT0
LC0 setrgbcolor
5294 4146 M
591 0 V
1342 4084 M
2143 2390 L
3145 1565 L
4146 1148 L
5148 898 L
6149 734 L
1342 4084 BoxF
2143 2390 BoxF
3145 1565 BoxF
4146 1148 BoxF
5148 898 BoxF
6149 734 BoxF
5589 4146 BoxF
1.000 UP
3.000 UL
LT7
LC7 setrgbcolor
LC2 setrgbcolor
LCb setrgbcolor
LT7
LC7 setrgbcolor
LC2 setrgbcolor
5294 3926 M
591 0 V
1342 4076 M
2143 2383 L
3145 1559 L
4146 1142 L
5148 892 L
6149 729 L
1342 4076 Crs
2143 2383 Crs
3145 1559 Crs
4146 1142 Crs
5148 892 Crs
6149 729 Crs
5589 3926 Crs
1.000 UL
LTb
LCb setrgbcolor
1342 4319 N
0 -3615 V
4807 0 V
0 3615 V
-4807 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 728 -505 a(T)-8 b(otal)31
b(execution)h(time)p 0 TeXcolorgray 917 -413 a(Sim)m(ulation)f(time)p
0 TeXcolorgray 0 TeXcolorgray Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
